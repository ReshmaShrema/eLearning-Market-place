020
const bcrypt = require('bcrypt');
exports.hashPassword =(password)=>{
    return new Promise((resolve,reject)=>{
        bcrypt.genSalt(12,(err,salt)=>{
            if(err){
                reject(err);
            }
            bcrypt.hash(password,salt,(err,hash)=>{
                if(err){
                    reject(err);
                }
                resolve(hash);
            });
        });
    });
    
}
exports.comparePassword = (password, hashed) => {
    return bcrypt.compare(password, hashed);
};
const User = require('../models/user');
const { hashPassword, comparePassword } = require('../Utils/auth');

exports.register = async (req, res) => {
    try {
        // console.log(req.body);
        const { name, email, password } = req.body;
        //validation
        if (!name) return res.status(400).send('Name is required');
        if (!password || password.length < 6) {
            return res
                .status(400)
                .send(
                    'password is required and should be min 6 charecter long'
                );
        }
        let userExist = await User.findOne({ email }).exec();
        if (userExist) return res.status(400).send('Email is taken');
        //hash password
        const hashedPassword = await hashPassword(password);
        //register
        const user = new User({
            name,
            email,
            password: hashedPassword,
        });
        await user.save();
        console.log('saved user', user);
        return res.json({ ok: true });
    } catch (err) {
        console.error(err);
        return res.status(400).send('Error,Try again.');
    }
    // console.log(req.body);
    // res.json('Register User ffff');
    //res.send('Register User ffff');
};

021
install toastify package in client side
npm i react-toastify
import {ToastContainer} from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css'
<ToastContainer position='top-center'/>

toast.success('message');
toast.error(err.response.data);
toast('plain message');


